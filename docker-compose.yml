#version: '3.8'

services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@localhost:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/var/lib/kafka

  mysql:
    image: mysql:8.0
    container_name: mysql_docker
    environment:
      MYSQL_DATABASE: root
      MYSQL_ROOT_PASSWORD: root_admin

    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    command: [ "redis-server", "--requirepass", "root_admin" ]
    environment:
      REDIS_PASSWORD: root_admin
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - cluster.name=docker-cluster
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=elastic

    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - es_network


  booking-care-command:
    image: roanvanquyen/booking-care-command:latest
    container_name: booking-care-command
    depends_on:
      - mysql
      - redis
      - kafka
    restart: on-failure
    ports:
      - "8083:8080"
    environment:
      SPRING_URL: http://localhost:8083
      SPRING_KAFKA_PORT: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/booking_care_command?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root_admin
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: root_admin
      WEB_URL: localhost:8082/home
  booking-care-query:
    image: roanvanquyen/booking-care-query:latest
    container_name: booking-care-query
    depends_on:
      - kafka
      - redis
    restart: on-failure
    ports:
      - "8084:8081"
    environment:
      SPRING_URL: http://localhost:8084
      SPRING_KAFKA_PORT: kafka:9092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: root_admin
volumes:
  mysql_data:
  redis_data:
  kafka_data:
  es_data:
    driver: local
networks:
  es_network:
    driver: bridge